trigger:
- none
# variables:
#       - group: 
pool:
  vmImage: 'ubuntu-latest'
stages:
- stage: SubscriptionProvisioning
  jobs:
  - job: SubProvisioning
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'azterraformspn'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          # Get the billing profile
          billingProfileJson=$(az billing account list --query "[0]")
          # Extract the necessary information
          billingScope=$(echo $billingProfileJson | jq -r '.id')
          displayName=$(echo $billingProfileJson | jq -r '.displayName')

          # Create a new subscription alias
          subnames=("connectivity" "identity" "management" "security")
          for subname in "${subnames[@]}"; do
              az account alias create --name "$subname" --billing-scope "$billingScope" --display-name "$subname"
              subId=$(az account show --subscription "$subname" --query 'id' -o tsv)
              echo "Subscription $subname has been created with ID $subId"
              echo "##vso[task.setvariable variable=${subname}SubId;isOuput=true]$subId"
          done
- stage: TerraformApply
  variables:
    myVarFromA: $[ stageDependencies.StageA.JobA.outputs['setvarStep.myOutputVar'] ]
- stage: LandingZonesDeployment
  jobs:
  - job: LZDeployment
    steps:
    - task: TerraformTaskV1@0
      inputs:
          provider: 'azurerm'
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)'
          backendServiceArm: azterraformspn
          backendAzureRmResourceGroupName: $($resourceGroupName)
          backendAzureRmStorageAccountName: $($storageAccountName)
          backendAzureRmContainerName: $($containerName)
          backendAzureRmKey: 'landing_zones.tfstate'

    - task: TerraformTaskV1@0
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: '$(System.DefaultWorkingDirectory)'

    # - task: TerraformTaskV1@0
    #   inputs:
    #     provider: 'azurerm'
    #     command: 'apply'
    #     workingDirectory: '$(System.DefaultWorkingDirectory)'
    #     environmentServiceNameAzureRM: azterraformspn